ブラウザが JSON パース機能をサポートしているか調べる
	ブラウザが、JSON パース機能をサポートしているか調べるには、window.JSON が真であるか比較します。

JSON 形式について
	空白、タブ、改行などの整形用の文字は、自由に挿入する事ができます。

JSON 形式で null 値を表現する
	JSON では、null と記述すると、null 値を表現できます。
	undefined 値を表現する事はできません。

JSON 形式で数値を表現する
	整数、小数、指数を表現できます。
	「16 進数」や 「8 進数」の表記を使用する事はできません。
　	NaN 値や、Infinity 値を表現する事はできません。

JSON 形式で文字列を表現する
	文字列は、ダブルクォーテーション『" "』 でくくります。
	シングルクォーテーション『' '』でくくる事はできません。

JSON 形式で配列を表現する
	[ true , false , 0 , 1 , 2 , 0.345 , "あ" , "い" ]

JSON 形式でオブジェクトを表現する
	オブジェクトのキーの部分は、文字列の表現と同じです。
	ずダブルクォーテーション『" "』 でくくる必要があります。

	{ "a":true , "b":false , "c":0 , "d":1 , "e":2 , "f":0.345 , "g":"あ" , "h":"い" }

オブジェクトから JSON 文字列に変換する
	JSON.stringify() メソッドを使用する
		JSON.stringify( オブジェクト , データ変換 , 整形 ) :String
		第01引数	*	オブジェクトや配列を指定。文字列、数値、真偽値、null でも可能。
		第02引数(略可)	*	データ変換用コールバック関数を指定。もしくは、出力したいプロパティ名が格納された配列を指定。
		第03引数(略可)	*	整形用文字列（空白、タブ、改行）を指定。もしくは、空白の個数を数値で指定。

JSON 文字列からオブジェクトに変換する
	JSON.parse() メソッドを使用する
		JSON.parse( "JSON 文字列" , コールバック関数 ) :*
		戻り値	*	オブジェクトや配列が得られる。もしくは、文字列、数値、真偽値、null が得られる。















