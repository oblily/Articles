Array クラス
	どんな型のデータでも格納する事ができます。
	Array クラスのメソッドを使用すると、配列を割り込み挿入したり、部分切除することができます。

配列を作成する
	new Array ( 初期の配列のサイズ ) :Array
		初期サイズは、仮想的な値です。実際に内部で領域が確保される事はありません。

初期データを格納しつつ Array オブジェクトを作成する
	配列リテラルを使用する
		var array = ["A" , "B" , "C" , 123 , 456 , true , false];  var array = [ ];
	Array クラスを使用する（非推奨）
		new Array ( 格納したいデータ , ... ) :Array
		var array = new Array("A","B","C","D","E");		
		var array = new Array("A","B","C","D","E");
		この仕様はバグを誘発しやすいため、配列リテラルを使用した方がいいでしょう。

配列のすべての番地に順番にアクセスする
	0 から順番にアクセスする
		配列のサイズを取得するには、length プロパティを使用します。
		Array オブジェクトを、連想配列として取り扱っている場合は注意します。
		length プロパティは、格納したデータの総数ではありません。
	for..in 文を使用する
		Array オブジェクトを、連想配列として取り扱っている場合は、for..in 文を使用します。
		得られる番地の順序は、昇順とは限りません。
		実際に得られる番地の順序は、ブラウザごとに異なります。
		var array = new Array();
		array[-12] = "A";
		array[123] = "B";
		array[456] = "C"; console.log("length:" + array.length);// 出力テスト (結果:457)
		var key;
		for (key in array){
			console.log("index:" + key);
			console.log("data:"  + array[key]);
		}

配列の任意の番地を削除する
	配列の任意の番地を削除するには、delete 文を使用します。


Array クラスのメソッド一覧
	Array.concat( Array ... ) :Array	２つ以上の配列を繋げて、新しい配列を取得する。
	Array.unshift( * ... ) :Number	配列の最先頭に複数のデータを追加して、新しいサイズを取得する。
	Array.push( * ... ) :Number	配列の最後尾に複数のデータを追加して、新しいサイズを取得する。
	Array.shift() :*	配列の最先頭を削除して、格納されていたデータを取得する。
		return: 配列の先頭に格納されていたデータ
	Array.pop() :*	配列の最後尾を削除して、格納されていたデータを取得する。
		return: 配列の最後尾に格納されていたデータ
	Array.slice( 開始位置 , 終了位置 ) :Array	配列の X 番目から Y 番目までを、新しい配列として取得する。
		第02引数で指定する終了位置は、取得対象に含まれません。
			マイナス値を指定すると「length + 第02引数」 の位置。(-1で最後尾は含まれない)
		引数を省略した場合、配列全体の複製となります。
	Array.splice( 開始位置 , 削除する個数 , * ... ) :Array	配列の X 番目から L 個分を削除して、新しい配列として取得する。
			配列の X 番目から複数のデータを追加する。
	Array.sort( コールバック関数 ) :Array	配列をソートする。
		第01引数を省略した場合、文字列としてデータが比較され、昇順でソートされます。
	Array.reverse( ) :Array	配列の順番を反転する。
	Array.join( 任意の文字列 ) :String	配列の各データの間に任意の文字列を挟み、すべて繋げたストリングを取得する。
		var a = [0,1,2,3,4];
		var str = a.join("-");  "0-1-2-3-4"
	toString() メソッド
		var a = ["A","B","C","D","E"];
		var str = a.toString(); //"A,B,C,D,E"

Array クラスのデータ管理について-----objectの使い方と一緒
	Array オブジェクトを連想配列として取り扱う場合、メソッドが利用できないので注意して下さい。
	length プロパティも機能しません。

	






































